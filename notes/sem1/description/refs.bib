@inproceedings{DBLP:conf/fmco/JohnsenHSSS10,
  author    = {Einar Broch Johnsen and
               Reiner H{\"{a}}hnle and
               Jan Sch{\"{a}}fer and
               Rudolf Schlatte and
               Martin Steffen},
  editor    = {Bernhard K. Aichernig and
               Frank S. de Boer and
               Marcello M. Bonsangue},
  title     = {{ABS:} {A} Core Language for Abstract Behavioral Specification},
  booktitle = {Formal Methods for Components and Objects - 9th International Symposium,
               {FMCO} 2010, Graz, Austria, November 29 - December 1, 2010. Revised
               Papers},
  series    = {Lecture Notes in Computer Science},
  volume    = {6957},
  pages     = {142--164},
  publisher = {Springer},
  year      = {2010},
  url       = {https://doi.org/10.1007/978-3-642-25271-6\_8},
  doi       = {10.1007/978-3-642-25271-6\_8},
  timestamp = {Tue, 14 May 2019 10:00:53 +0200},
  biburl    = {https://dblp.org/rec/conf/fmco/JohnsenHSSS10.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@book{Fowler1999,
  added-at = {2007-09-26T23:42:13.000+0200},
  address = {Boston, MA, USA},
  author = {Fowler, Martin},
  biburl = {https://www.bibsonomy.org/bibtex/27151885e8b8528651e048242f3527132/kimmens},
  description = {AOEvolutionchapter short paper},
  interhash = {955b704413985c65e6a0ba497d70b00e},
  intrahash = {7151885e8b8528651e048242f3527132},
  isbn = {0-201-48567-2},
  keywords = {evolution refactoring software},
  publisher = {Addison-Wesley},
  timestamp = {2007-09-26T23:42:13.000+0200},
  title = {Refactoring: Improving the Design of Existing Code},
  year = 1999
}

@misc{xtext, 
title={Xtext}, 
howpublished={\url{https://www.eclipse.org/Xtext/}},
author={Eclipse},
year = {2021},
journal={Xtext - Language Engineering Made Easy!}} 
 
@misc{lsp, title={Language Server Protocol}, 
howpublished={\url{https://microsoft.github.io/language-server-protocol/}}, 
author={Microsoft},
year = {2020},
journal={Official page for Language Server Protocol}} 


@inproceedings{DBLP:conf/nik/KristiansenS14,
  author    = {Erlend Kristiansen and
               Volker Stolz},
  title     = {Search-based composed refactorings},
  booktitle = {27th Norsk Informatikkonferanse, {NIK} 2014, H{\o}gskolen i {\O}stfold,
               Fredrikstad, Norway, November 17-19, 2014},
  publisher = {Bibsys Open Journal Systems, Norway},
  year      = {2014},
  url       = {http://ojs.bibsys.no/index.php/NIK/article/view/14},
  timestamp = {Fri, 05 Feb 2021 11:08:05 +0100},
  biburl    = {https://dblp.org/rec/conf/nik/KristiansenS14.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}


@inproceedings{DBLP:conf/isola/StolzPG20,
  author    = {Volker Stolz and
               Violet Ka I Pun and
               Rohit Gheyi},
  editor    = {Tiziana Margaria and
               Bernhard Steffen},
  title     = {Refactoring and Active Object Languages},
  booktitle = {Leveraging Applications of Formal Methods, Verification and Validation:
               Engineering Principles - 9th International Symposium on Leveraging
               Applications of Formal Methods, ISoLA 2020, Rhodes, Greece, October
               20-30, 2020, Proceedings, Part {II}},
  series    = {Lecture Notes in Computer Science},
  volume    = {12477},
  pages     = {138--158},
  publisher = {Springer},
  year      = {2020},
  url       = {https://doi.org/10.1007/978-3-030-61470-6\_9},
  doi       = {10.1007/978-3-030-61470-6\_9},
  timestamp = {Wed, 28 Oct 2020 11:46:09 +0100},
  biburl    = {https://dblp.org/rec/conf/isola/StolzPG20.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@book{lorenzoxtext,
author = {Bettini, Lorenzo},
title = {Implementing Domain Specific Languages with Xtext and Xtend - Second Edition},
year = {2016},
isbn = {1786464969},
publisher = {Packt Publishing},
edition = {2nd},
abstract = {Learn how to implement a DSL with Xtext and Xtend using easy-to-understand examples and best practices About This BookLeverage the latest features of Xtext and Xtend to develop a domain-specific language. Integrate Xtext with popular third party IDEs and get the best out of both worlds. Discover how to test a DSL implementation and how to customize runtime and IDE aspects of the DSL Who This Book Is For This book is targeted at programmers and developers who want to create a domain-specific language with Xtext. They should have a basic familiarity with Eclipse and its functionality. Previous experience with compiler implementation can be helpful but is not necessary since this book will explain all the development stages of a DSL. What You Will LearnWrite Xtext grammar for a DSL; Use Xtend as an alternative to Java to write cleaner, easier-to-read, and more maintainable code; Build your Xtext DSLs easily with Maven/Tycho and Gradle; Write a code generator and an interpreter for a DSL; Explore the Xtext scoping mechanism for symbol resolution; Test most aspects of the DSL implementation with JUnit; Understand best practices in DSL implementations with Xtext and Xtend; Develop your Xtext DSLs using Continuous Integration mechanisms; Use an Xtext editor in a web applicationIn DetailXtext is an open source Eclipse framework for implementing domain-specific languages together with IDE functionalities. It lets you implement languages really quickly; most of all, it covers all aspects of a complete language infrastructure, including the parser, code generator, interpreter, and more. This book will enable you to implement Domain Specific Languages (DSL) efficiently, together with their IDE tooling, with Xtext and Xtend. Opening with brief coverage of Xtext features involved in DSL implementation, including integration in an IDE, the book will then introduce you to Xtend as this language will be used in all the examples throughout the book. You will then explore the typical programming development workflow with Xtext when we modify the grammar of the DSL. Further, the Xtend programming language (a fully-featured Java-like language tightly integrated with Java) will be introduced. We then explain the main concepts of Xtext, such as validation, code generation, and customizations of runtime and UI aspects. You will have learned how to test a DSL implemented in Xtext with JUnit and will progress to advanced concepts such as type checking and scoping. You will then integrate the typical Continuous Integration systems built in to Xtext DSLs and familiarize yourself with Xbase. By the end of the book, you will manually maintain the EMF model for an Xtext DSL and will see how an Xtext DSL can also be used in IntelliJ. Style and approach A step-by step-tutorial with illustrative examples that will let you master using Xtext and implementing DSLs with its custom language, Xtend.}
}



@article{DBLP:journals/corr/abs-2108-02961,
  author    = {Jonas Kj{\ae}r Rask and
               Frederik Palludan Madsen and
               Nick Battle and
               Hugo Daniel Macedo and
               Peter Gorm Larsen},
  title     = {The Specification Language Server Protocol: {A} Proposal for Standardised
               {LSP} Extensions},
  journal   = {CoRR},
  volume    = {abs/2108.02961},
  year      = {2021},
  url       = {https://arxiv.org/abs/2108.02961},
  eprinttype = {arXiv},
  eprint    = {2108.02961},
  timestamp = {Wed, 11 Aug 2021 15:24:08 +0200},
  biburl    = {https://dblp.org/rec/journals/corr/abs-2108-02961.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}


